name: ClusterIP Service
checks:
  - id: pod_running
    name: Pod my-pod is running
    command: kubectl
    args: -n default get deployment my-deployment -o jsonpath='{.status.readyReplicas}'
    operator: EQUALS
    expectation: 1
    successText: The Deployment has at least one running pod
    failureText: The Deployment has to have at least one running pod
  - id: service_exists
    name: Service my-service exists
    command: kubectl
    args: -n default get svc my-service -o jsonpath='{.metadata.name}'
    operator: EQUALS
    expectation: my-service
    successText: Service my-service exists
    failureText: Service my-service does not exist
  - id: service_type_is_clusterip
    name: Service my-service is of type ClusterIp
    command: kubectl
    args: -n default get svc my-service -o jsonpath='{.spec.type}'
    operator: EQUALS
    expectation: ClusterIP
    successText: The service is of type ClusterIP
    failureText: Ensure that the service is of type ClusterIP
